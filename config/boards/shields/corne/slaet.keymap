/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#define DEFAULT      0
#define NUMLAYER     1
#define NAVLAYER     2
#define MOUSELAYER   3

/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_ent {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp RET>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp TAB>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp SQT>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp DEL>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LALT>;
        };               
        combo_lclk {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&mkp LCLK>;
        };
        combo_rclk {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&mkp RCLK>;
        };               
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {

                        bindings = <
   &kp LC(X)      &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y               &kp SEMI     &kp LC(S)
   &kp LC(C)   &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &lt NAVLAYER I      &kp O        &kp SQT
   &kp LC(V)  &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT             &kp FSLH     &kp ESC

                  &kp LCTRL &sk LSHIFT &lt NUMLAYER SPACE   &sk RSHIFT &kp RCTRL &kp RALT
                  
                        >;
                };
                
                NUMLAYER {

                        bindings = <
   &kp TAB   &kp EXCL &kp AT    &kp LBRC &kp RBRC &kp PIPE2     &kp J &kp N7  &kp N8     &kp N9   &kp ASTRK          &kp EQUAL
   &kp LCTRL &kp HASH &kp DLLR  &kp LPAR &kp RPAR &kp DOT       &kp H &kp N4  &kp N5     &kp N6   &kp PLUS           &kp MINUS
   &kp LSHFT &kp FSLH &kp CARET &kp LBKT &kp RBKT &kp TILDE2    &kp K &kp N1  &kp N2     &kp N3   &kp KP_DIVIDE      &kp AMPS

                  &trans &sk LSHIFT &trans   &kp N0 &kp DOT &kp RALT
                  
                        >;
                };
                NAVLAYER {

                        bindings = <
   &kp TAB   &kp Q &kp PG_DN    &kp UP   &kp PG_UP     &kp G       &kp J &kp L  &kp U     &kp Y    &kp SEMI      &bt BT_CLR
   &kp LCTRL &kp A &kp LEFT     &kp DOWN &kp RIGHT     &kp D       &kp H &kp N  &kp E     &trans   &kp O         &kp SQT
   &kp LSHFT &kp Z &kp X        &kp C    &kp V         &kp B       &kp K &kp M  &kp COMMA &kp DOT  &kp FSLH      &bt BT_SEL 3

                  &kp LCTRL &sk LSHIFT &kp SPACE   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2
                  
                        >;
                };
                MOUSELAYER {

                        bindings = <
   &trans   &trans &trans        &trans     &trans      &trans      &trans   &trans     &trans    &trans   &trans     &trans 
   &trans   &trans &mkp RCLK     &mkp LCLK  &trans      &trans      &trans   &trans     &trans    &trans   &trans     &trans 
   &trans   &trans &trans        &trans     &trans      &trans      &trans   &trans     &trans    &trans   &trans     &trans 

                   &trans &trans &trans  &trans &trans &trans
                  
                        >;
                };
        };
};