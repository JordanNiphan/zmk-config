
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 3000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 40    // default: 10

#include <dt-bindings/zmk/pointing.h>

#define DEFAULT      0
#define NUMLAYER     1
#define NAVLAYER     2
#define MOUSE        3
#define RECROOM      4

/*
  ╭─────────────────────────┬─────────────────────────╮ 
  │  0   1   2   3   4   5  │  6   7   8   9   10  11 │ 
  │  12  13  14  15  16  17 |  18  19  20  21  22  23 │ 
  │  24  25  26  27  28  29 |  30  31  32  33  34  35 │ 
  ╰────────────╮ 36  37  38 |  39 40  41 ╭────────────╯ 
               ╰────────────┴────────────╯            */

/ {
     behaviors {
        nbspc: n_bspc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp BSPC>;
            mods = <(MOD_LCTL|MOD_RALT)>;
        };
    };
    
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_ent {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp RET>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp TAB>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp SQT>;
        };
        combo_lclk {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&mkp MB1>;
        };
        combo_rclk {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&mkp MB2>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp DEL>;
        };
        combo_bootloader_left {
            timeout-ms = <50>;
            key-positions = <36 37 38>;
            bindings = <&bootloader>;
        };
        combo_bootloader_right {
            timeout-ms = <50>;
            key-positions = <39 40 41>;
            bindings = <&bootloader>;
        };
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LGUI>;
        };
        combo_equal {
            timeout-ms = <50>;
            key-positions = <3 2>;
            bindings = <&kp EQUAL>;
        };
            combo_btclr {
            timeout-ms = <50>;
            key-positions = <0 12 24>;
            bindings = <&bt BT_CLR_ALL>;
        };
            combo_recroom {
            timeout-ms = <50>;
            key-positions = <33 34 35>;
            bindings = <&tog RECROOM>;
        };

    };
};

/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {

                        bindings = <
                                &kp F14    &kp Q   &kp W   &kp F       &kp P       &kp B                       &kp J       &kp L       &kp U       &kp Y               &kp SEMI   &kp U     
                                &kp F15    &kp A   &kp R   &kp S       &kp T       &kp G                       &kp M       &kp N       &kp E       &lt NAVLAYER I      &kp O      &kp U       
                                &kp F16    &kp Z   &kp X   &kp C       &kp D       &kp V                       &kp K       &kp H       &kp COMMA   &lt MOUSE DOT       &kp FSLH   &kp U   
                                                    &kp LSHIFT    &kp LCTRL   &lt NUMLAYER SPACE          &sk RSHIFT  &kp RCTRL   &kp RALT 
                  
                        >;
                };
                NUMLAYER {

                        bindings = <
                                &trans  &kp EXCL    &kp BSLH    &kp LBRC    &kp RBRC    &kp PIPE2               &kp FSLH    &kp N7  &kp N8  &kp N9   &kp ASTRK      &trans          
                                &trans  &kp HASH    &kp DLLR    &kp LPAR    &kp RPAR    &kp DOT                 &kp BSLH    &kp N4  &kp N5  &kp N6   &kp PLUS       &trans           
                                &trans  &kp FSLH    &kp CARET   &kp LBKT    &kp RBKT    &kp TILDE2              &kp MINUS   &kp N1  &kp N2  &kp N3   &kp KP_DIVIDE  &trans      
                                                                    &trans      &sk LSHIFT  &trans                  &mt LSHIFT NUMBER_0     &kp RSHIFT  &kp RALT
                  
                        >;
                };
                NAVLAYER {

                        bindings = <
                                &trans  &trans      &kp PG_DN   &kp UP      &kp PG_UP   &trans                  &kt S           &trans          &trans          &trans  &trans  &bt BT_CLR_ALL
                                &trans  &trans      &kp LEFT    &kp DOWN    &kp RIGHT   &trans                  &kt L           &trans          &trans          &trans  &trans          &trans
                                &trans  &soft_off   &trans      &trans      &trans      &trans                  &trans          &trans          &trans          &trans  &bt BT_SEL 3    &trans
                                                                &trans      &sk LSHIFT  &kp SPACE               &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2
                  
                        >;
                };
                MOUSE {

                        bindings = <
                                &trans  &trans  &msc SCRL_DOWN      &mmv MOVE_UP    &msc SCRL_UP        &trans                  &trans      &trans      &trans  &trans  &trans  &trans
                                &trans  &trans  &mmv MOVE_LEFT      &mmv MOVE_DOWN  &mmv MOVE_RIGHT     &trans                  &trans      &trans      &trans  &trans  &trans  &trans
                                &trans  &trans  &trans              &trans          &trans              &trans                  &trans      &trans      &trans  &trans  &trans  &trans
                                                                        &trans          &trans              &trans                  &mkp LCLK   &mkp RCLK   &trans                  
                        >;
                };

                RECROOM {

                        bindings = <
                             &kp NUMBER_1    &kp C           &kp Q           &kp W           &kp E           &kp T                   &bootloader     &bootloader     &bootloader     &bootloader     &bootloader   &trans 
                             &kp NUMBER_2     &trans          &kp A           &kp S           &kp D           &kp F           &kp K_SLEEP     &kp K_SLEEP     &kp K_SLEEP     &kp K_SLEEP     &kp K_SLEEP   &trans
                             &kp NUMBER_3     &kp Z           &trans          &kp X           &trans			&kp M           &soft_off       &soft_off       &soft_off       &soft_off       &soft_off     &trans
                                                            &kp V      &kp LSHIFT         &kp SPACE                   &trans          &trans          &trans                  
                        >;
                };

        };
};

/* You will never find what you seek... stop looking */